apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "app.chartname" . }}-wallet-account-init
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
    app.kubernetes.io/instance: {{ include "app.revision" . }}
    app.kubernetes.io/part-of: rse
    {{ include "app.istioLabels" . | nindent 4 }}
spec:
  ttlSecondsAfterFinished: 10
  template:
    spec:
      containers:
      - name: {{ template "app.chartname" . }}-wallet-account-init
        image: curlimages/curl:latest
        command: ["sh", "-c"]
        args:
        - |          
          # give some time for wallet to start and be ready
          sleep 10
          
          response=$(curl -s -o /dev/null -w "%{http_code}" -X 'POST' \
              'http://{{ template "app.chartname" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.config.http.port }}/wallet-api/auth/register' \
              -H 'accept: */*' \
              -H 'Content-Type: application/json' \
              -d '{
              "name": "{{ .Values.config.init.account.name }}",
              "email": "{{ .Values.config.init.account.email }}",
              "password": "{{ .Values.config.init.account.pass }}",
              "type": "email"
              }')
          if [ $response -eq 201 ]; then
            echo "Successfully registered wallet!"
            sleep 5
            loginResponse=$(curl -s -o /dev/null -w "%{http_code}" -X 'POST' \
            'http://{{ template "app.chartname" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.config.http.port }}/wallet-api/auth/login' \
              -H 'accept: */*' \
              -H 'Content-Type: application/json' \
              -d '{
              "type": "email",
              "email": "{{ .Values.config.init.account.email }}",
              "password": "{{ .Values.config.init.account.pass }}"
            }')
            if [ $loginResponse -eq 200 ]; then
              sleep 2
              echo "Successfull"
              curl   -X 'GET' \
              'http://{{ template "app.chartname" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.config.http.port }}/wallet-api/wallet/accounts/wallets' \
              -H 'accept: */*' 
              exit 0
            else 
              echo "failed"
              exit 1
            fi
          else
            echo "Failed to register wallet. Response: $response"
            exit 1
          fi
          exit
              
      restartPolicy: Never
  backoffLimit: 4





