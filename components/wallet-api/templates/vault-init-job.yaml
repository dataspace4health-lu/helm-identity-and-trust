{{- if .Values.vault.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "app.chartname" . }}-vault-server-init
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
    app.kubernetes.io/instance: {{ include "app.revision" . }}
    app.kubernetes.io/part-of: rse
    {{ include "app.istioLabels" . | nindent 4 }}
spec:
  ttlSecondsAfterFinished: 10
  template:
    spec:
      containers:
      - name: {{ template "app.chartname" . }}-vault-server-init
        image: {{ .Values.vault.server.image.registry }}/{{ .Values.vault.server.image.repository }}:{{ .Values.vault.server.image.tag }}
        command: ["sh", "-c"]
        args:
        - |
          set -xe

          export VAULT_ADDR="http://{{ include "app.chartname" . }}-vault-server-headless.{{ .Release.Namespace }}.svc.cluster.local:8200"
          {{- range $index, $element := .Values.vault.server.args }}
          {{- if $element | regexMatch "-dev-root-token-id=.*" }}
            {{- $token := $element | regexFind "-dev-root-token-id=(.*)" }}
            {{- $token := regexReplaceAll "-dev-root-token-id=(.*)" $token "$1" }} 
          export VAULT_TOKEN={{ $token | quote }}
          {{- end }}
          {{- end }}
          
          # give some time for Vault to start and be ready
          sleep 15

          vault login -no-store $VAULT_TOKEN

          # enable vault transit engine
          vault secrets enable transit

          # create key1 with type ecdsa-p256
          #vault write -f transit/keys/key1 type=ecdsa-p256

          # create key2 with type ed25519
          #vault write -f transit/keys/key2 type=ed25519

          # create key3 with type rsa-4096
          #vault write -f transit/keys/key3 type=rsa-4096

          exit
      restartPolicy: Never
  backoffLimit: 4
{{- end }}