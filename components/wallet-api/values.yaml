# -- Default number of instances to start 
replicaCount: 1
# -- Application name
name: wallet-api
# -- Ovverwrites application name
# nameOverride: "issuer"

image:
  # repository: docker.io
  repository: ds4h-registry:5432
  # -- Image name
  name: waltid/wallet-api
  # -- Image tag
  # Uses .Chart.AppVersion if empty
  #tag: "1.0.2501201345-SNAPSHOT"
  tag: latest
  # -- Image sha, usually generated by the CI
  # Uses image.tag if empty
  sha: ""
  # -- Image pull policy
  #pullPolicy: IfNotPresent
  pullPolicy: Always
  # -- Image pull secret when internal image is used
  #pullSecrets: deployment-key-light

## Use configMap or secretRef for environment variables
useConfigMap: false
configMapName: my-configmap
useSecretRef: false
secretRefName: my-secret

podAnnotations: {}

resources:
  requests:
    cpu: 150m
    memory: 128Mi
  limits:
    cpu: 300m
    memory: 600Mi

autoscaling:
  # -- Enable autoscaling
  enabled: false
  # -- Minimum replicas
  minReplicas: 2
  # -- Maximum replicas
  maxReplicas: 3
  # -- CPU target for autoscaling trigger
  targetCPUUtilizationPercentage: 70
  # -- Memory target for autoscaling trigger
  targetMemoryUtilizationPercentage: 70

metrics:
  # -- Enable prometheus metrics
  enabled: false #true
  # -- Port for prometheus metrics
  port: 2112

log:
  level: "debug"
  encoding: json

security:
  # -- by default, apps run as non-root
  runAsNonRoot: false
  # -- User used by the apps
  runAsUid: 0
  # -- Group used by the apps
  runAsGid: 0

service:
  port: 8080

postgresql:
  enabled: true
  auth:
    postgresPassword: "xfsc4Ntt!"
    database: vc-wallet-api
    username: vc-wallet-api
    password: "xfsc4Ntt!"
  primary:
    persistence:
      enabled: true
      size: 5Gi

vault:
  enabled: true
  injector:
    enabled: false
  server:
    args: 
      - server
      - -dev
      - -dev-root-token-id=root
      - -dev-listen-address=0.0.0.0:8200
    persistence:
      size: 5Gi

config:
  init:
    account:
      name: "NTT Data"
      email: "wallet@ntt.com"
      pass: "xfsc4Ntt!"
  http:
    host: ""
    port: 8080
    timeout:
      idle: 120s
      read: 10s
      write: 10s
  persistance:
    size: 10Gi
  database:
    dataSource:
      jdbcUrl: null
      driverClassName: null
      username: null
      password: null
      transactionIsolation: "TRANSACTION_SERIALIZABLE"
      maximumPoolSize: 5
      autoCommit: false
      dataSource:
        journalMode: "WAL"
        fullColumnNames: false
    recreateDatabaseOnStart: false
  oidc:
    publicBaseUrl: "https://wallet-dev.walt.id"
    providerName: keycloak
    oidcRealm: "https://dataspace4health.local/iam/realms/ds4h"
    oidcJwks: "${oidcRealm}/protocol/openid-connect/certs"
    oidcScopes: ["openid", "roles"]
    authorizeUrl: "${oidcRealm}/protocol/openid-connect/auth"
    accessTokenUrl: "${oidcRealm}/protocol/openid-connect/token"
    logoutUrl: "${oidcRealm}/protocol/openid-connect/logout"
    clientId: "waltid_backend"
    clientSecret: "__DEFAULT_KEYCLOAK_CLIENT_SECRET__"
    keycloakUserApi: "https://dataspace4health.local/iam/admin/realms/ds4h/users"
    jwksCache:
      cacheSize: 10
      cacheExpirationHours: 24
      rateLimit:
        bucketSize: 10
        refillRateMinutes: 1
  auth:
    encryptionKey: "dncygwnvivxzlohc" # a 128 bit (16 chars) key
    signKey: "jyjeylmidlylokzh" # a 128 bit (16 chars) key
    # Available Signing Algorithms are: RS256 or HS256.
    # If HS256, then provide the 256+ bit key in the tokenKey field. If RS256, then provide the private key in JWK format in the tokenKey field.
    tokenKey: "hjklwcptiniwjkdwwkigreumcayoyiso" # at least 256 bit (32 chars)
    # Specify your iss and sub claims
    audTokenClaim: "https://dataspace4health.local"
    issTokenClaim: "https://dataspace4health.local"
    tokenLifetime: "30" # days
  registrationDefaults:
    vault:
      server: null
      accessKey: null
    did:
      domain: "dataspace4health.local"
      path: "/wallet/api"
    issuer:
      name: "ntt-data"
      description: "NTT Data Issuer"
      uiEndpoint: "https://dataspace4health.local/portal/credentials?ids="
      configurationEndpoint: "https://dataspace4health.local/issuer/api/.well-known/openid-credential-issuer"

ingress:
  enabled: true
  hosts:
    - paths:
      - path: /wallet/api
        port: 8080
        pathType: Prefix
  replacePath:
    regex: /wallet/api(/|$)(.*)
    replacement: /$2
  replaceHeader:
    header: Location
    regex: (/|^)swagger(.*)
    replacement: /wallet/api/swagger$2
  replaceBody:
    regex: (")?url(")?(\s)?(:) "\/("|api\.json")
    replacement: url $4 "/wallet/api/$5
    logLevel: -2
    monitoring:
      methods:
      - GET
      types:
      - "*/*"
      - application/javascript
      - application/json
  tls:
    - secretName: dataspace4health.local
      hosts:
        - dataspace4health.local

# istio:
#   injection:
#     pod: true
