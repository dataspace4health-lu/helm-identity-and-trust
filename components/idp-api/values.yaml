# -- Default number of instances to start 
replicaCount: 1
# -- Application name
name: idp-api
# -- Ovverwrites application name
# nameOverride: "issuer"

image:
  repository: ds4h-registry:5432
  # -- Image name
  name: waltid/idpkit
  # -- Image tag
  # Uses .Chart.AppVersion if empty
  tag: latest
  # -- Image sha, usually generated by the CI
  # Uses image.tag if empty
  sha: ""
  # -- Image pull policy
  pullPolicy: Always
  # -- Image pull secret when internal image is used
  #pullSecrets: deployment-key-light

## Use configMap or secretRef for environment variables
useConfigMap: false
configMapName: my-configmap
useSecretRef: false
secretRefName: my-secret

podAnnotations: {}

resources:
  requests:
    cpu: 150m
    memory: 128Mi
  limits:
    cpu: 300m
    memory: 600Mi

autoscaling:
  # -- Enable autoscaling
  enabled: false
  # -- Minimum replicas
  minReplicas: 2
  # -- Maximum replicas
  maxReplicas: 3
  # -- CPU target for autoscaling trigger
  targetCPUUtilizationPercentage: 70
  # -- Memory target for autoscaling trigger
  targetMemoryUtilizationPercentage: 70

metrics:
  # -- Enable prometheus metrics
  enabled: false #true
  # -- Port for prometheus metrics
  port: 2112

log:
  level: "debug"
  encoding: json

security:
  # -- by default, apps run as non-root
  runAsNonRoot: false
  # -- User used by the apps
  runAsUid: 0
  # -- Group used by the apps
  runAsGid: 0

service:
  port: 8080

config:     
  persistance:
    size: 100Mi
  externalUrl: https://dataspace4health.local/idp
  #verifierUiUrl: https://dataspace4health.local/verifier/ui
  verifierApiUrl: https://dataspace4health.local/verifier/api/v1 # important! must be full url
  walletUrl: /wallet/ui
  claimConfig: |
    {
      "vc_mappings": [
        {
          "scope": [ "profile" ],
          "claim": "name",
          "credentialType": "NaturalPerson",
          "valuePath": "$.credentialSubject.firstName $.credentialSubject.familyName"
        },
        {
          "scope": [ "profile" ],
          "claim": "family_name",
          "credentialType": "NaturalPerson",
          "valuePath": "$.credentialSubject.familyName"
        },
        {
          "scope": [ "profile" ],
          "claim": "given_name",
          "credentialType": "NaturalPerson",
          "valuePath": "$.credentialSubject.firstName"
        },
        {
          "scope": [ "email" ],
          "claim": "email",
          "credentialType": "NaturalPerson",
          "valuePath": "$.credentialSubject.email"
        }
      ],
      "default_vp_token_claim": {
        "presentation_definition": {
          "id": "1",
          "input_descriptors": [
            {
              "id": "1",
              "constraints": {
                "fields": [
                  {
                    "id": "1",
                    "path": [ "$.type" ],
                    "filter": { "const": "NaturalPerson" }
                  }
                ]
              }
            }
          ]
        }
      }
    }
  http:
    host: ""
    port: 8080
    timeout:
      idle: 120s
      read: 10s
      write: 10s

ingress:
  enabled: true
  hosts:
    - paths:
      # Prevent access to path /oidc/clients
      - path: /idp/api/swagger
        port: 8080
        pathType: Prefix
      - path: /idp/api/api-documentation
        port: 8080
        pathType: Prefix
      - path: /idp/api-routes
        port: 8080
        pathType: Prefix
      - path: /idp/verifier-api
        port: 8080
        pathType: Prefix
      - path: /idp/api/siop
        port: 8080
        pathType: Prefix
      - path: /idp/api/oidc/.well-known
        port: 8080
        pathType: Prefix
      - path: /idp/api/oidc/jwkSet
        port: 8080
        pathType: Prefix
      - path: /idp/api/oidc/par
        port: 8080
        pathType: Prefix
      - path: /idp/api/oidc/authorize
        port: 8080
        pathType: Prefix
      - path: /idp/api/oidc/token
        port: 8080
        pathType: Prefix
      - path: /idp/api/oidc/web-api
        port: 8080
        pathType: Prefix
      - path: /idp/api/oidc/userInfo
        port: 8080
        pathType: Prefix
      - path: /idp/api/nft
        port: 8080
        pathType: Prefix
      - path: /idp/api/siwe
        port: 8080
        pathType: Prefix
  replacePath:
    regex: /idp(/|$)(.*)
    replacement: /$2
  replaceHeader:
    header: Location
    regex: /sharecredential(.*)
    replacement: /idp/ui/sharecredential$1
  replaceBody:
    regex: (")?(href|src|url)(")?(=|:)(\s)?(")\/([^"]*)(")
    replacement: $1$2$3$4$5$6/idp/$7$8
    logLevel: -2
    monitoring:
      methods:
      - GET
      types:
      - "*/*"
      - text/html
      - application/json
  tls:
    - secretName: dataspace4health.local
      hosts:
        - dataspace4health.local

# istio:
#   injection:
#     pod: true
